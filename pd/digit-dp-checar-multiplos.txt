/// Digit DP para checar algo com multiplos

/*
Find the number of integers between 
1 and K (inclusive) satisfying the following condition, modulo 10^9+7

* The sum of the digits in base ten is a multiple of D.
*/

#include <bits/stdc++.h>
#define int long long
using namespace std;

const int MAX = 1e4+5, MOD = 1e9+7;
int D, memo[MAX][105][2];
vector<int> ds;

int dp(int i, int res, int emp) {
  if(i == (int)ds.size()) {
    return (res == 0);
  }
  int &ans = memo[i][res][emp];
  if(ans != -1) return memo[i][res][emp];
  ans = 0;
  const int r = (emp ? ds[i] : 9);
  for(int d = 0; d <= r; ++d) {
    ans += dp(i+1, (res + d) % D, emp && d == r), ans %= MOD;
  }
  return ans;
}

signed main() {
  cin.tie(nullptr)->sync_with_stdio(0);

  string p;
  cin>>p>>D;
  memset(memo, -1, sizeof(memo));
  for(int i = 0; i < (int)p.size(); ++i) {
    ds.push_back(p[i]-'0');
  }
  cout<<(dp(0, 0, 1) + MOD - 1) % MOD<<'\n';
}

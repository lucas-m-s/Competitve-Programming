// Finding Centroid
// O(E + V)
// verifique se eh arvore e essas coisas

#include <bits/stdc++.h>
#define int long long
using namespace std;

const int MAX = 2e5+5;

int n;
vector<int> ns[MAX], sub(MAX);

int dfsc(int u, int p = -1) {
  sub[u] = 1;
  for(int v : ns[u]) {
    if(v != p) sub[u] += dfsc(v, u);
  }
  return sub[u];
}

int cent(int u, int p = -1) {
  for(int v : ns[u]) {
    if(v != p && sub[v] > n / 2) {
      return cent(v, u);
    }
  }
  return u;
}

signed main() {
  cin.tie(nullptr)->sync_with_stdio(0);

  cin>>n;
  for(int i = 0; i < n-1; ++i) {
    int u, v; cin>>u>>v;
    ns[u].emplace_back(v);
    ns[v].emplace_back(u);
  }
  dfsc(1);
  cout<<cent(1)<<'\n';
}

/// Merge Sort
/// O(N log N)


#include <bits/stdc++.h>

using namespace std;

vector<int> merge(vector<int> first, vector<int> second) {
  int pfirst = 0, psecond = 0;
  vector<int> ns;
  while(pfirst < first.size() && psecond < second.size()) {
    if(first[pfirst] > second[psecond]) ns.emplace_back(first[pfirst++]);
    else ns.emplace_back(second[psecond++]);
  }
  while(pfirst == first.size() && psecond < second.size()) {
    ns.emplace_back(second[psecond++]);
  }
  while(psecond == second.size() && pfirst < first.size()) {
    ns.emplace_back(first[pfirst++]);
  }
  return ns;
}

vector<int> merge_sort(vector<int> ns) {
  if(ns.size() == 1) return ns;
  vector<int> first, second;
  const int mid = ns.size() / 2;
  for (int i = 0; i < mid; ++i) first.emplace_back(ns[i]);
  for (int i = mid; i < ns.size(); ++i) second.emplace_back(ns[i]);
  first = merge_sort(first);
  second = merge_sort(second);
  return merge(first, second);
}

int main() {
  int n;
  cin>>n;
  vector<int> ns(n);
  for(int &v:ns) cin>>v;
  ns = merge_sort(ns);
  for(int v:ns) cout<<v<<' ';
  cout<<'\n';
}